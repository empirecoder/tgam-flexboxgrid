// Remove the horizontal padding from the row, and remove padding
// from all immediate children columns (to prevent runaway style inheritance).

@if $include-grid-no-gutters {
  // special case for xs tier (due to container padding)
  @include media-breakpoint-down(xs, $grid-breakpoints) {
    .l-row--gutters-none {
      margin-left: -($grid-gutter-width-base / 2);
      margin-right: -($grid-gutter-width-base / 2);
    }
  }

  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      // Remove left/right padding from all columns in row
      .l-row#{$infix}--gutters-none {
        > .l-col,
        > [class*="l-col-"] {
          padding-left: 0 !important;
          padding-right: 0 !important;
        }
      }
      .l-row#{$infix}--gutters-default {
        margin-left: 0;
        margin-right: 0;
        > .l-col,
        > [class*="l-col-"] {
          padding-left: ($grid-gutter-width-base / 2) !important;
          padding-right: ($grid-gutter-width-base / 2) !important;
        }
      }

      // Remove left/right padding from this column
      .l-col#{$infix}--gutters-none {
        padding-left: 0 !important;
        padding-right: 0 !important;
      }
      .l-col#{$infix}--gutters-default {
        padding-left: ($grid-gutter-width-base / 2) !important;
        padding-right: ($grid-gutter-width-base / 2) !important;
      }

      // Remove left padding from this column
      .l-col#{$infix}--gutters-left-none {
        padding-left: 0 !important;
      }
      .l-col#{$infix}--gutters-left-default {
        padding-left: ($grid-gutter-width-base / 2) !important;
      }

      // Remove right padding from this column
      .l-col#{$infix}--gutters-right-none {
        padding-right: 0 !important;
      }
      .l-col#{$infix}--gutters-right-default {
        padding-right: ($grid-gutter-width-base / 2) !important;
      }
    }
  }
}
