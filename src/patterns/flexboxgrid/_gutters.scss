// Remove the horizontal padding from the row, and remove padding
// from all immediate children columns (to prevent runaway style inheritance).

@if $grid-include-grid-no-gutters {
  @each $breakpoint in map-keys($grid-breakpoints) {
    @include grid-breakpoint-up($breakpoint, $grid-breakpoints) {
      $infix: grid-breakpoint-infix($breakpoint, $grid-breakpoints);

      // Remove left/right padding from all columns in row
      .l-row#{$infix}--gutters-none {
        margin-left: 0;
        margin-right: 0;
        > .l-col,
        > [class*="l-col-"] {
          padding-left: 0;
          padding-right: 0;
        }
      }
      .l-row#{$infix}--gutters-default {
        margin-left: -($grid-gutter-width-base / 2);
        margin-right: -($grid-gutter-width-base / 2);
        > .l-col,
        > [class*="l-col-"] {
          padding-left: ($grid-gutter-width-base / 2);
          padding-right: ($grid-gutter-width-base / 2);
        }
      }

      // Remove left/right padding from this column
      .l-col#{$infix}--gutters-none {
        padding-left: 0;
        padding-right: 0;
      }
      .l-col#{$infix}--gutters-default {
        padding-left: ($grid-gutter-width-base / 2);
        padding-right: ($grid-gutter-width-base / 2);
      }

      // Remove left padding from this column
      .l-col#{$infix}--gutters-left-none {
        padding-left: 0;
      }
      .l-col#{$infix}--gutters-left-default {
        padding-left: ($grid-gutter-width-base / 2);
      }

      // Remove right padding from this column
      .l-col#{$infix}--gutters-right-none {
        padding-right: 0;
      }
      .l-col#{$infix}--gutters-right-default {
        padding-right: ($grid-gutter-width-base / 2);
      }
    }
  }
}
