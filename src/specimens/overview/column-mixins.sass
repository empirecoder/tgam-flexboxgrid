// Apply styles to make an element grid column ready
// Everything but the width of the column is applied
@mixin grid-make-col-ready($gutter: $grid-gutter-width-base) {
  position: relative;
  width: 100%;
  min-height: 1px; // Prevent columns from collapsing when empty
}

// Apply default gutter padding to a column
@mixin grid-make-gutters($gutter: $grid-gutter-width-base) {
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
}

// Apply a fixed column width (REM unit)
// For normal column creation, which are related to grid column counts.
@mixin grid-make-col-fixed($size, $columns, $breakpoint) {
  flex: 0 0 grid-width-fixed($size, $columns, $breakpoint);
  max-width: grid-width-fixed($size, $columns, $breakpoint);
}

// Apply a percentage column width (% unit)
// For custom column creation, which are related to grid column counts.
@mixin grid-make-col-percentage($size, $columns, $breakpoint) {
  $max: map-get($columns, $breakpoint);
  flex: 0 0 percentage($size / $max);
  max-width: percentage($size / $max);
}

// Apply a fixed bleed to the left and right margin of element.
// In order to make the column match a desired column (rem) width.
@mixin grid-make-col-bleed($current, $desired, $breakpoint, $gutter: $grid-gutter-width-base) {
  $bleed: grid-width-bleed($current, $desired, $breakpoint, $gutter);
  margin-left: -$bleed;
  margin-right: -$bleed;
}

// Calc the bleed for an element out of a column, but align it with a larger column width.
// $current is the current column count within the $breakpoint tier
// $desired is the desired column count within the $breakpoint tier
// $breakpoint is the tier to use for current/desired calculations
// $gutter is the grid gutter width
@function grid-width-bleed($current, $desired, $breakpoint, $gutter: $grid-gutter-width-base) {
  $columns: map-get($grid-columns, $breakpoint);
  $current-width: grid-width-fixed($current, $columns, $breakpoint) - ($gutter * 2);
  $desired-width: grid-width-fixed($desired, $columns, $breakpoint) - ($gutter * 2);
  $bleed: ($desired-width - $current-width) / 2;
  @return $bleed;
}

// Apply a fixed bleed to the left and right margin of element.
// In order to make the column match a desired viewport (vw) width.
@mixin grid-make-col-vw($vwidth, $current, $breakpoint, $gutter: $grid-gutter-width-base) {
  $columns: map-get($grid-columns, $breakpoint);
  $current-width: grid-width-fixed($current, $columns, $breakpoint) - ($gutter * 2);
  width: #{$vwidth}vw;
  margin-left: calc(-#{$vwidth / 2}vw + #{$current-width / 2});
  margin-right: calc(-#{$vwidth / 2}vw + #{$current-width / 2});
}

// Apply a custom fixed column width (REM unit)
// For very custom column creation, which are NOT related to grid column counts.
@mixin grid-make-col-custom($width) {
  flex: 0 0 $width;
  max-width: $width;
}

// Apply a percentage column width (% unit)
// For custom column creation, which aren't related to grid column counts.
@mixin grid-make-col-percent($size, $max) {
  flex: 0 0 percentage($size / $max);
  max-width: percentage($size / $max);
}
